
name: Continuous Integration

on: 
  push:
    branches:
      - master

env:
  IMAGE: docker.pkg.github.com/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')/app

jobs:

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v3
      - name: Log in to Github Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull image
        run: |
          docker pull ${{ env.IMAGE }}:latest || true
      - name: Build Image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./project/Dockerfile.prod \
            "./project"
      - name: Push image
        run: |
          docker push ${{ env.IMAGE }}:latest
  
#   test:
#     name: Test Docker Image
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Checkout master
#         uses: actions/checkout@v3
#       - name: Log in to GitHub Packages
#         run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - name: Pull images
#         run: |
#           docker pull ${{ env.IMAGE }}:latest || true
#       - name: Build images
#         run: |
#           docker build \
#             --cache-from ${{ env.IMAGE }}:latest \
#             --tag ${{ env.IMAGE }}:latest \
#             --file ./project/Dockerfile.prod \
#             "./project"
#       - name: Run container
#         run: |
#           docker run \
#             -d \
#             --name docker-dash \
#             -p 8000:8000 \
#             ${{ env.IMAGE }}:latest
#       - name: Install requirements
#         run: docker exec docker-dash pip install black==22.12.0 flake8===6.0.0 pytest==7.2.1 bandit==1.7.4
#     #   - name: Pytest
#         # run: docker exec docker-dash python -m pytest .
#       - name: Flake8
#         run: docker exec docker-dash python -m flake8 --max-line-length=119 .
#       - name: Black
#         run: docker exec docker-dash python -m black . --check
